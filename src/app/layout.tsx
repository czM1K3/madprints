import "~/styles/globals.css";
import '@mantine/core/styles.css';

import { GeistSans } from "geist/font/sans";
import { type Metadata } from "next";

import { TRPCReactProvider } from "~/trpc/react";
import { AppShell, AppShellHeader, AppShellMain, ColorSchemeScript, MantineProvider } from "@mantine/core";
import { theme } from "./_theme";
import Link from "next/link";
import { auth } from "~/server/auth";

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const session = await auth();
  return (
    <html lang="en">
      <head>
        <ColorSchemeScript />
        <meta
          name="viewport"
          content="minimum-scale=1, initial-scale=1, width=device-width, user-scalable=no"
        />
      </head>
      <body className={GeistSans.className}>
        <MantineProvider theme={theme}>
          <TRPCReactProvider>
            <AppShell
              header={{ height: 60 }}
            >
              <AppShellHeader>
                <Link href="/">MadPrints</Link>
                <div>
                  <p>
                    {session && <span>Logged in as {session.user?.name}</span>}
                  </p>
                  {/* <p>{JSON.stringify(session)}</p> */}
                  <Link
                    href={session ? "/api/auth/signout" : "/api/auth/signin"}
                  >
                    {session ? "Sign out" : "Sign in"}
                  </Link>
                </div>
              </AppShellHeader>
              <AppShellMain>
                {children}
              </AppShellMain>
            </AppShell>
          </TRPCReactProvider>
        </MantineProvider>
        <div dangerouslySetInnerHTML={{
          __html:'<script src="/worker-loader.js"></script>'
        }} />
      </body>
    </html>
  );
}
